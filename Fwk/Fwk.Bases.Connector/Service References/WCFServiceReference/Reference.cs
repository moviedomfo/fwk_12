//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Fwk.Bases.Connector.WCFServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WCFRequet", Namespace="http://schemas.datacontract.org/2004/07/WcfDispatcher.Service")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fwk.Exceptions.ServiceError))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fwk.Bases.ContextInformation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fwk.Bases.BaseEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fwk.Bases.EntityState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fwk.Bases.Connector.WCFServiceReference.WCFResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fwk.ConfigSection.DispatcherInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fwk.ConfigSection.DictionarySetting[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fwk.ConfigSection.DictionarySetting))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fwk.ConfigSection.MetadataProvider[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fwk.ConfigSection.MetadataProvider))]
    public partial class WCFRequet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object BusinessDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Fwk.Bases.ContextInformation ContextInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProviderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object BusinessData {
            get {
                return this.BusinessDataField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessDataField, value) != true)) {
                    this.BusinessDataField = value;
                    this.RaisePropertyChanged("BusinessData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Fwk.Bases.ContextInformation ContextInformation {
            get {
                return this.ContextInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextInformationField, value) != true)) {
                    this.ContextInformationField = value;
                    this.RaisePropertyChanged("ContextInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProviderName {
            get {
                return this.ProviderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderNameField, value) != true)) {
                    this.ProviderNameField = value;
                    this.RaisePropertyChanged("ProviderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WCFResponse", Namespace="http://schemas.datacontract.org/2004/07/WcfDispatcher.Service")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fwk.Exceptions.ServiceError))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fwk.Bases.ContextInformation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fwk.Bases.BaseEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fwk.Bases.EntityState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fwk.Bases.Connector.WCFServiceReference.WCFRequet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fwk.ConfigSection.DispatcherInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fwk.ConfigSection.DictionarySetting[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fwk.ConfigSection.DictionarySetting))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fwk.ConfigSection.MetadataProvider[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Fwk.ConfigSection.MetadataProvider))]
    public partial class WCFResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object BusinessDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Fwk.Exceptions.ServiceError ErrorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object BusinessData {
            get {
                return this.BusinessDataField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessDataField, value) != true)) {
                    this.BusinessDataField = value;
                    this.RaisePropertyChanged("BusinessData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Fwk.Exceptions.ServiceError Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFServiceReference.IFwkService")]
    public interface IFwkService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFwkService/ExecuteService", ReplyAction="http://tempuri.org/IFwkService/ExecuteServiceResponse")]
        Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceResponse ExecuteService(Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFwkService/ExecuteService", ReplyAction="http://tempuri.org/IFwkService/ExecuteServiceResponse")]
        System.Threading.Tasks.Task<Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceResponse> ExecuteServiceAsync(Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFwkService/ExecuteServiceAuthToken", ReplyAction="http://tempuri.org/IFwkService/ExecuteServiceAuthTokenResponse")]
        Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceAuthTokenResponse ExecuteServiceAuthToken(Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceAuthTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFwkService/ExecuteServiceAuthToken", ReplyAction="http://tempuri.org/IFwkService/ExecuteServiceAuthTokenResponse")]
        System.Threading.Tasks.Task<Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceAuthTokenResponse> ExecuteServiceAuthTokenAsync(Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceAuthTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFwkService/ExecuteServiceBin", ReplyAction="http://tempuri.org/IFwkService/ExecuteServiceBinResponse")]
        Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceBinResponse ExecuteServiceBin(Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceBinRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFwkService/ExecuteServiceBin", ReplyAction="http://tempuri.org/IFwkService/ExecuteServiceBinResponse")]
        System.Threading.Tasks.Task<Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceBinResponse> ExecuteServiceBinAsync(Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceBinRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFwkService/GetServiceConfiguration", ReplyAction="http://tempuri.org/IFwkService/GetServiceConfigurationResponse")]
        Fwk.Bases.Connector.WCFServiceReference.GetServiceConfigurationResponse GetServiceConfiguration(Fwk.Bases.Connector.WCFServiceReference.GetServiceConfigurationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFwkService/GetServiceConfiguration", ReplyAction="http://tempuri.org/IFwkService/GetServiceConfigurationResponse")]
        System.Threading.Tasks.Task<Fwk.Bases.Connector.WCFServiceReference.GetServiceConfigurationResponse> GetServiceConfigurationAsync(Fwk.Bases.Connector.WCFServiceReference.GetServiceConfigurationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFwkService/GetServicesList", ReplyAction="http://tempuri.org/IFwkService/GetServicesListResponse")]
        Fwk.Bases.Connector.WCFServiceReference.GetServicesListResponse GetServicesList(Fwk.Bases.Connector.WCFServiceReference.GetServicesListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFwkService/GetServicesList", ReplyAction="http://tempuri.org/IFwkService/GetServicesListResponse")]
        System.Threading.Tasks.Task<Fwk.Bases.Connector.WCFServiceReference.GetServicesListResponse> GetServicesListAsync(Fwk.Bases.Connector.WCFServiceReference.GetServicesListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFwkService/RetriveDispatcherInfo", ReplyAction="http://tempuri.org/IFwkService/RetriveDispatcherInfoResponse")]
        Fwk.Bases.Connector.WCFServiceReference.RetriveDispatcherInfoResponse RetriveDispatcherInfo(Fwk.Bases.Connector.WCFServiceReference.RetriveDispatcherInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFwkService/RetriveDispatcherInfo", ReplyAction="http://tempuri.org/IFwkService/RetriveDispatcherInfoResponse")]
        System.Threading.Tasks.Task<Fwk.Bases.Connector.WCFServiceReference.RetriveDispatcherInfoResponse> RetriveDispatcherInfoAsync(Fwk.Bases.Connector.WCFServiceReference.RetriveDispatcherInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFwkService/GetAllApplicationsId", ReplyAction="http://tempuri.org/IFwkService/GetAllApplicationsIdResponse")]
        Fwk.Bases.Connector.WCFServiceReference.GetAllApplicationsIdResponse GetAllApplicationsId(Fwk.Bases.Connector.WCFServiceReference.GetAllApplicationsIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFwkService/GetAllApplicationsId", ReplyAction="http://tempuri.org/IFwkService/GetAllApplicationsIdResponse")]
        System.Threading.Tasks.Task<Fwk.Bases.Connector.WCFServiceReference.GetAllApplicationsIdResponse> GetAllApplicationsIdAsync(Fwk.Bases.Connector.WCFServiceReference.GetAllApplicationsIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFwkService/GetProviderInfo", ReplyAction="http://tempuri.org/IFwkService/GetProviderInfoResponse")]
        Fwk.Bases.Connector.WCFServiceReference.GetProviderInfoResponse GetProviderInfo(Fwk.Bases.Connector.WCFServiceReference.GetProviderInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFwkService/GetProviderInfo", ReplyAction="http://tempuri.org/IFwkService/GetProviderInfoResponse")]
        System.Threading.Tasks.Task<Fwk.Bases.Connector.WCFServiceReference.GetProviderInfoResponse> GetProviderInfoAsync(Fwk.Bases.Connector.WCFServiceReference.GetProviderInfoRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteService", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExecuteServiceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string providerName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string serviceName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string jsonRequets;
        
        public ExecuteServiceRequest() {
        }
        
        public ExecuteServiceRequest(string providerName, string serviceName, string jsonRequets) {
            this.providerName = providerName;
            this.serviceName = serviceName;
            this.jsonRequets = jsonRequets;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteServiceResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExecuteServiceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string ExecuteServiceResult;
        
        public ExecuteServiceResponse() {
        }
        
        public ExecuteServiceResponse(string ExecuteServiceResult) {
            this.ExecuteServiceResult = ExecuteServiceResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteServiceAuthToken", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExecuteServiceAuthTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string providerName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string serviceName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string jsonRequets;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string token;
        
        public ExecuteServiceAuthTokenRequest() {
        }
        
        public ExecuteServiceAuthTokenRequest(string providerName, string serviceName, string jsonRequets, string token) {
            this.providerName = providerName;
            this.serviceName = serviceName;
            this.jsonRequets = jsonRequets;
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteServiceAuthTokenResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExecuteServiceAuthTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string ExecuteServiceAuthTokenResult;
        
        public ExecuteServiceAuthTokenResponse() {
        }
        
        public ExecuteServiceAuthTokenResponse(string ExecuteServiceAuthTokenResult) {
            this.ExecuteServiceAuthTokenResult = ExecuteServiceAuthTokenResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteServiceBin", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExecuteServiceBinRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Fwk.Bases.Connector.WCFServiceReference.WCFRequet req;
        
        public ExecuteServiceBinRequest() {
        }
        
        public ExecuteServiceBinRequest(Fwk.Bases.Connector.WCFServiceReference.WCFRequet req) {
            this.req = req;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteServiceBinResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExecuteServiceBinResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Fwk.Bases.Connector.WCFServiceReference.WCFResponse ExecuteServiceBinResult;
        
        public ExecuteServiceBinResponse() {
        }
        
        public ExecuteServiceBinResponse(Fwk.Bases.Connector.WCFServiceReference.WCFResponse ExecuteServiceBinResult) {
            this.ExecuteServiceBinResult = ExecuteServiceBinResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServiceConfiguration", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetServiceConfigurationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string providerName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string serviceName;
        
        public GetServiceConfigurationRequest() {
        }
        
        public GetServiceConfigurationRequest(string providerName, string serviceName) {
            this.providerName = providerName;
            this.serviceName = serviceName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServiceConfigurationResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetServiceConfigurationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetServiceConfigurationResult;
        
        public GetServiceConfigurationResponse() {
        }
        
        public GetServiceConfigurationResponse(string GetServiceConfigurationResult) {
            this.GetServiceConfigurationResult = GetServiceConfigurationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServicesList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetServicesListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string providerName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool ViewAsXml;
        
        public GetServicesListRequest() {
        }
        
        public GetServicesListRequest(string providerName, bool ViewAsXml) {
            this.providerName = providerName;
            this.ViewAsXml = ViewAsXml;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServicesListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetServicesListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetServicesListResult;
        
        public GetServicesListResponse() {
        }
        
        public GetServicesListResponse(string GetServicesListResult) {
            this.GetServicesListResult = GetServicesListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetriveDispatcherInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RetriveDispatcherInfoRequest {
        
        public RetriveDispatcherInfoRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetriveDispatcherInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RetriveDispatcherInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Fwk.ConfigSection.DispatcherInfo RetriveDispatcherInfoResult;
        
        public RetriveDispatcherInfoResponse() {
        }
        
        public RetriveDispatcherInfoResponse(Fwk.ConfigSection.DispatcherInfo RetriveDispatcherInfoResult) {
            this.RetriveDispatcherInfoResult = RetriveDispatcherInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllApplicationsId", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllApplicationsIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string providerName;
        
        public GetAllApplicationsIdRequest() {
        }
        
        public GetAllApplicationsIdRequest(string providerName) {
            this.providerName = providerName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllApplicationsIdResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllApplicationsIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string[] GetAllApplicationsIdResult;
        
        public GetAllApplicationsIdResponse() {
        }
        
        public GetAllApplicationsIdResponse(string[] GetAllApplicationsIdResult) {
            this.GetAllApplicationsIdResult = GetAllApplicationsIdResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProviderInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetProviderInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string providerName;
        
        public GetProviderInfoRequest() {
        }
        
        public GetProviderInfoRequest(string providerName) {
            this.providerName = providerName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProviderInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetProviderInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Fwk.ConfigSection.MetadataProvider GetProviderInfoResult;
        
        public GetProviderInfoResponse() {
        }
        
        public GetProviderInfoResponse(Fwk.ConfigSection.MetadataProvider GetProviderInfoResult) {
            this.GetProviderInfoResult = GetProviderInfoResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFwkServiceChannel : Fwk.Bases.Connector.WCFServiceReference.IFwkService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FwkServiceClient : System.ServiceModel.ClientBase<Fwk.Bases.Connector.WCFServiceReference.IFwkService>, Fwk.Bases.Connector.WCFServiceReference.IFwkService {
        
        public FwkServiceClient() {
        }
        
        public FwkServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FwkServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FwkServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FwkServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceResponse ExecuteService(Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceRequest request) {
            return base.Channel.ExecuteService(request);
        }
        
        public System.Threading.Tasks.Task<Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceResponse> ExecuteServiceAsync(Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceRequest request) {
            return base.Channel.ExecuteServiceAsync(request);
        }
        
        public Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceAuthTokenResponse ExecuteServiceAuthToken(Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceAuthTokenRequest request) {
            return base.Channel.ExecuteServiceAuthToken(request);
        }
        
        public System.Threading.Tasks.Task<Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceAuthTokenResponse> ExecuteServiceAuthTokenAsync(Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceAuthTokenRequest request) {
            return base.Channel.ExecuteServiceAuthTokenAsync(request);
        }
        
        public Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceBinResponse ExecuteServiceBin(Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceBinRequest request) {
            return base.Channel.ExecuteServiceBin(request);
        }
        
        public System.Threading.Tasks.Task<Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceBinResponse> ExecuteServiceBinAsync(Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceBinRequest request) {
            return base.Channel.ExecuteServiceBinAsync(request);
        }
        
        public Fwk.Bases.Connector.WCFServiceReference.GetServiceConfigurationResponse GetServiceConfiguration(Fwk.Bases.Connector.WCFServiceReference.GetServiceConfigurationRequest request) {
            return base.Channel.GetServiceConfiguration(request);
        }
        
        public System.Threading.Tasks.Task<Fwk.Bases.Connector.WCFServiceReference.GetServiceConfigurationResponse> GetServiceConfigurationAsync(Fwk.Bases.Connector.WCFServiceReference.GetServiceConfigurationRequest request) {
            return base.Channel.GetServiceConfigurationAsync(request);
        }
        
        public Fwk.Bases.Connector.WCFServiceReference.GetServicesListResponse GetServicesList(Fwk.Bases.Connector.WCFServiceReference.GetServicesListRequest request) {
            return base.Channel.GetServicesList(request);
        }
        
        public System.Threading.Tasks.Task<Fwk.Bases.Connector.WCFServiceReference.GetServicesListResponse> GetServicesListAsync(Fwk.Bases.Connector.WCFServiceReference.GetServicesListRequest request) {
            return base.Channel.GetServicesListAsync(request);
        }
        
        public Fwk.Bases.Connector.WCFServiceReference.RetriveDispatcherInfoResponse RetriveDispatcherInfo(Fwk.Bases.Connector.WCFServiceReference.RetriveDispatcherInfoRequest request) {
            return base.Channel.RetriveDispatcherInfo(request);
        }
        
        public System.Threading.Tasks.Task<Fwk.Bases.Connector.WCFServiceReference.RetriveDispatcherInfoResponse> RetriveDispatcherInfoAsync(Fwk.Bases.Connector.WCFServiceReference.RetriveDispatcherInfoRequest request) {
            return base.Channel.RetriveDispatcherInfoAsync(request);
        }
        
        public Fwk.Bases.Connector.WCFServiceReference.GetAllApplicationsIdResponse GetAllApplicationsId(Fwk.Bases.Connector.WCFServiceReference.GetAllApplicationsIdRequest request) {
            return base.Channel.GetAllApplicationsId(request);
        }
        
        public System.Threading.Tasks.Task<Fwk.Bases.Connector.WCFServiceReference.GetAllApplicationsIdResponse> GetAllApplicationsIdAsync(Fwk.Bases.Connector.WCFServiceReference.GetAllApplicationsIdRequest request) {
            return base.Channel.GetAllApplicationsIdAsync(request);
        }
        
        public Fwk.Bases.Connector.WCFServiceReference.GetProviderInfoResponse GetProviderInfo(Fwk.Bases.Connector.WCFServiceReference.GetProviderInfoRequest request) {
            return base.Channel.GetProviderInfo(request);
        }
        
        public System.Threading.Tasks.Task<Fwk.Bases.Connector.WCFServiceReference.GetProviderInfoResponse> GetProviderInfoAsync(Fwk.Bases.Connector.WCFServiceReference.GetProviderInfoRequest request) {
            return base.Channel.GetProviderInfoAsync(request);
        }
    }
}
